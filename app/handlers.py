import asyncio
from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

import app.keyboards as kb
from .ai import get_completion


class Ai(StatesGroup):
    response = State()


class Post(StatesGroup):
    confirm = State()
    create = State()


router = Router()


@router.message(Command("start"))
async def start_handler(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üòä‚ú®\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—É –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏–≥—Ä –Ω–∞ Unreal Engine 5, –≥–¥–µ –º–µ—á—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é! üéÆüíª\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –º–∏—Ä—ã, –æ–∂–∏–≤–ª—è—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å. üí°üåç\n\n"
        "–ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ —Å—Ç–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º –º–∞—Å—Ç–µ—Ä–æ–º –≥–µ–π–º–¥–µ–≤–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä–∏ –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏—é –∏–≥—Ä. üöÄüìö\n\n"
        "–î–∞–≤–∞–π —Å–æ–∑–¥–∞–≤–∞—Ç—å –±—É–¥—É—â–µ–µ –∏–≥—Ä –≤–º–µ—Å—Ç–µ! #UnrealEngine5 #–ì–µ–π–º–¥–µ–≤",
        reply_markup=kb.main_keyboard
    )


@router.message(Command("help"))
async def help_commands(message: Message):
    await message.answer("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: \n/start - –ù–∞—á–∞—Ç—å\n/help - –ü–æ–º–æ—â—å\n/ai - AI-–ø–æ–º–æ—â–Ω–∏–∫\n/post - –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç")


@router.message(Command("ai"))
async def ai_start(message: Message, state: FSMContext):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n\n- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ Unreal Engine 5\n- –ü–æ–º–æ–≥–∞—Ç—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏\n"
        "- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –≥–µ–π–º–¥–µ–≤—É"
    )
    await state.set_state(Ai.response)


@router.message(StateFilter(Ai.response))
async def ai_response(message: Message, state: FSMContext):
    loading_message = await message.answer('–î—É–º–∞—é...')
    await asyncio.sleep(1)
    await waiting(loading_message)
    response = await get_completion(message.text)
    await message.answer(response)
    await state.clear()


async def waiting(message: Message):
    loading_list = ['–î—É–º–∞—é.', '–î—É–º–∞—é..', '–î—É–º–∞—é...']
    for phrase in loading_list:
        await message.edit_text(text=phrase)
        await asyncio.sleep(1)